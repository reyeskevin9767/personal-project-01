[{"D:\\Programming\\personal-project-01\\gfl\\src\\index.js":"1","D:\\Programming\\personal-project-01\\gfl\\src\\App.js":"2","D:\\Programming\\personal-project-01\\gfl\\src\\components\\DollStats.js":"3","D:\\Programming\\personal-project-01\\gfl\\src\\components\\DollDetails.js":"4","D:\\Programming\\personal-project-01\\gfl\\src\\components\\SelectStats.js":"5"},{"size":151,"mtime":1609730400837,"results":"6","hashOfConfig":"7"},{"size":1626,"mtime":1610003028629,"results":"8","hashOfConfig":"7"},{"size":810,"mtime":1609831869438,"results":"9","hashOfConfig":"7"},{"size":2919,"mtime":1609911980476,"results":"10","hashOfConfig":"7"},{"size":2510,"mtime":1610003041219,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tn1yef",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\personal-project-01\\gfl\\src\\index.js",[],["24","25"],"D:\\Programming\\personal-project-01\\gfl\\src\\App.js",[],"D:\\Programming\\personal-project-01\\gfl\\src\\components\\DollStats.js",[],"D:\\Programming\\personal-project-01\\gfl\\src\\components\\DollDetails.js",["26","27"],"import React from 'react';\r\n\r\nconst DollDetails = ({ dollDetails, inDepthDetails }) => {\r\n  //* Convert Seconds to hour format\r\n  const convertMinsToHour = (seconds) => {\r\n    const convertSecondsToMinutes = seconds / 60;\r\n    let hour = Math.floor(convertSecondsToMinutes / 60);\r\n    let mins = convertSecondsToMinutes % 60;\r\n    hour = hour < 10 ? '0' + hour : hour;\r\n    mins = mins < 10 ? '0' + mins : mins;\r\n    return hour + ':' + mins;\r\n  };\r\n\r\n  //* Search through the JSON file to find more depth info about T-Doll\r\n  const findDollInfo = (info) => {\r\n    return inDepthDetails[info];\r\n  };\r\n\r\n  // const findDollskill = (skill) => {\r\n  //   const skill1 = dollInfo.skill1\r\n  //   return skill1[skill];\r\n  // };\r\n\r\n  const newValue = dollDetails.effect;\r\n\r\n  if (Object.keys(dollDetails).length !== 0) {\r\n    console.log(newValue.effectCenter);\r\n  }\r\n\r\n  const renderedDollEffects = () => {\r\n    const getEffects = dollDetails.effect;\r\n    const getGridEffects = getEffects.gridEffect;\r\n\r\n    const getEffectPos = getEffects.effectPos.map((item) => {\r\n      return <p>{item}</p>;\r\n    });\r\n\r\n    const getGridPosEffects = (\r\n      <p>{`Dodge - ${getGridEffects.dodge}, ${getGridEffects.pow}`}</p>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <p>{getEffects.effectCenter} </p>\r\n        {getEffectPos}\r\n        <p>{getEffects.effectType} </p>\r\n        {getGridPosEffects}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Can use function parameter as object proptery with []\r\n  const renderedArray = (dollinfo, infoOfDoll, newInfo) => {\r\n    return infoOfDoll.map((info, index) => {\r\n      return <p key={`${index}`}>{dollinfo(info[newInfo])}</p>;\r\n    });\r\n  };\r\n\r\n  console.log(dollDetails);\r\n\r\n  // const renderedArray2 = (infoOfDoll) => {\r\n  //   return infoOfDoll.map((info, index) => {\r\n  //     return <p key={`${index}`}>{info}</p>;\r\n  //   });\r\n  // };\r\n\r\n  // const newcode = dollInfo.effect\r\n  // const newcode2 = newcode.gridEffect;\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(dollDetails).length !== 0) {\r\n      return (\r\n        <div>\r\n          <p>\r\n            {dollDetails.codename} - {dollDetails.type}{' '}\r\n          </p>\r\n          <p>Construction Time - {convertMinsToHour(dollDetails.buildTime)}</p>\r\n          {renderedDollEffects()}\r\n          {/* {renderedArray(findDollInfo, dollDetails.obtain, 'description')}\r\n          {renderedArray(findDollInfo, dollDetails.skins, 'name')} */}\r\n          {/* {renderedArray2(dollInfo.equip1)}\r\n          {renderedArray2(dollInfo.equip2)}\r\n          {renderedArray2(newcode.effectPos)}\r\n          {newcode.effectCenter} */}\r\n          {/* {newcode2.pow} Instead of this do findDollSkill similar */}\r\n          {/* {newcode2.dodge} */}\r\n          {/* {findDollskill('codename')} */}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>Loading</div>;\r\n    }\r\n  };\r\n\r\n  return <div>{renderContent()}</div>;\r\n};\r\n\r\nexport default DollDetails;\r\n","D:\\Programming\\personal-project-01\\gfl\\src\\components\\SelectStats.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":15,"column":9,"nodeType":"34","messageId":"35","endLine":15,"endColumn":21},{"ruleId":"32","severity":1,"message":"36","line":53,"column":9,"nodeType":"34","messageId":"35","endLine":53,"endColumn":22},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'findDollInfo' is assigned a value but never used.","Identifier","unusedVar","'renderedArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]